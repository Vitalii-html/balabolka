// ===============================
// bot.js - —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ chat.html
// ===============================

// ------------------------------
// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è DOM –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
// ------------------------------
const inputEl = document.getElementById("messageInput"); // –ø–æ–ª–µ –≤–≤–æ–¥—É
const sendBtn = document.getElementById("sendBtn");      // –∫–Ω–æ–ø–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
const messagesEl = document.getElementById("messages");  // –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
const endBtn = document.getElementById("endChatBtn");    // –∫–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —á–∞—Ç
const nextBtn = document.getElementById("nextChatBtn");  // –∫–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫–∞

// –î–æ–¥–∞–º–æ –µ–ª–µ–º–µ–Ω—Ç typing –¥–ª—è "—Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫ –ø–∏—à–µ"
let typingEl = document.getElementById("typing");
if(!typingEl){
    typingEl = document.createElement("div");
    typingEl.id = "typing";
    typingEl.className = "typing";
    typingEl.textContent = "–°–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫ –ø–∏—à–µ...";
    typingEl.style.display = "none";
    messagesEl.appendChild(typingEl);
}

// ------------------------------
// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —á–∞—Ç–æ–º
// ------------------------------
function addMessage(text, className=""){
    const msg = document.createElement("div");
    msg.className = "message " + className;
    msg.textContent = text;
    messagesEl.insertBefore(msg, typingEl); // –≤—Å—Ç–∞–≤–ª—è—î–º–æ –ø–µ—Ä–µ–¥ "typing"
    messagesEl.scrollTop = messagesEl.scrollHeight;
}

function showTyping(){
    typingEl.style.display = "block";
}

function hideTyping(){
    typingEl.style.display = "none";
}

function sendMessage(){
    const text = inputEl.value.trim();
    if(text === "") return;
    addMessage(text, "my-message");
    inputEl.value = "";
    botRespond(text);
}

// ------------------------------
// –ü–æ–¥—ñ—ó —á–∞—Ç—É
// ------------------------------
sendBtn.addEventListener('click', sendMessage);
inputEl.addEventListener('keypress', e => {
    if(e.key === 'Enter') sendMessage();
});

endBtn.addEventListener('click', ()=>{
    addMessage("–ß–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", "system-message");
    setTimeout(()=>{ window.location.href="menu.html"; }, 1000);
});

nextBtn.addEventListener('click', ()=>{
    addMessage("–ü–æ—à—É–∫ –Ω–æ–≤–æ–≥–æ —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫–∞...", "system-message");
    setTimeout(()=>{
        addMessage("–°–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫ –∑–Ω–∞–π–¥–µ–Ω–∏–π!", "system-message");
    },1500);
});

// ------------------------------
// –ü–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
// ------------------------------
setTimeout(()=>{
    addMessage("–°–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫ –∑–Ω–∞–π–¥–µ–Ω–∏–π!", "system-message");
},1500);

// ===============================
// –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
// ===============================
let userGender = "—á–æ–ª–æ–≤—ñ–∫";
let userAge = 18;

// ===============================
// –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫–∞ (–±–æ—Ç)
// ===============================
let partnerGender = "–∂—ñ–Ω–∫–∞";
let partnerAgeRange = "18-23";
let botName = partnerGender === "–∂—ñ–Ω–∫–∞" ? "–ê–ª—ñ—Å–∞" : "–ú–∞–∫—Å–∏–º";
let botAge = getRandomAge(partnerAgeRange);

// ===============================
// –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥—ñ–∞–ª–æ–≥—É
// ===============================
let context = {
    lastTopic: null,
    lastQuestion: null,
    lastAnswer: null,
    askedAbout: {},
    userAge: userAge,
    userGender: userGender
};

// ===============================
// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤—ñ–∫—É
// ===============================
function getRandomAge(range){
    switch(range){
        case "–º–µ–Ω—à–µ 18": return Math.floor(Math.random()*8)+10;
        case "18-23": return Math.floor(Math.random()*6)+18;
        case "24-29": return Math.floor(Math.random()*6)+24;
        case "30-40": return Math.floor(Math.random()*11)+30;
        case "40+": return Math.floor(Math.random()*20)+40;
        default: return 25;
    }
}

// ===============================
// –°–ª–æ–≤–Ω–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
// ===============================
const dictionary = {
    greetings: {
        words: ["–ø—Ä–∏–≤—ñ—Ç","—Ö–∞–π","–∑–¥—Ä–∞—Å—Ç—É–π","hello","hi"],
        fragments: ["–ü—Ä–∏–≤—ñ—Ç!","–•–∞–π, —Ä–∞–¥–∏–π –±–∞—á–∏—Ç–∏!","Hello üôÇ","–ü—Ä–∏–≤—ñ—Ç-–ø—Ä–∏–≤—ñ—Ç!"]
    },
    name: {
        words: ["—ñ–º'—è","–∑–≤–∞—Ç–∏","—è–∫ —Ç–µ–±–µ","—Ç–≤—ñ–π —ñ–º'—è"],
        fragments: [`–ú–µ–Ω–µ –∑–≤–∞—Ç–∏ ${botName}`]
    },
    age: {
        words: ["–≤—ñ–∫","—Å–∫—ñ–ª—å–∫–∏","—Ä–æ–∫—ñ–≤"],
        fragments: [`–ú–µ–Ω—ñ ${botAge} —Ä–æ–∫—ñ–≤`]
    },
    hobbies: {
        words: ["—Ö–æ–±—ñ","–∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è","—Ü—ñ–∫–∞–≤–æ","–ª—é–±–∏—à","—â–æ —Ä–æ–±–∏—à"],
        fragments: [
            "–Ø –ª—é–±–ª—é —á–∏—Ç–∞—Ç–∏ –∫–Ω–∏–≥–∏",
            "–ú–æ—î —Ö–æ–±—ñ ‚Äî —Å–ø–æ—Ä—Ç",
            "–û–±–æ–∂–Ω—é—é –ø–æ–¥–æ—Ä–æ–∂—É–≤–∞—Ç–∏",
            "–ú–µ–Ω—ñ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è –º—É–∑–∏–∫–∞",
            "–õ—é–±–ª—é –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ —á–∞—Å –Ω–∞ –ø—Ä–∏—Ä–æ–¥—ñ"
        ]
    },
    feelings: {
        words: ["–Ω–∞—Å—Ç—Ä—ñ–π","—è–∫","–ø–æ—á—É–≤–∞—î—à—Å—è","–µ–º–æ—Ü—ñ—ó","–ø–æ—á—É—Ç—Ç—è"],
        fragments: [
            "–í –º–µ–Ω–µ –≥–∞—Ä–Ω–∏–π –Ω–∞—Å—Ç—Ä—ñ–π üôÇ",
            "–¢—Ä–æ—Ö–∏ –≤—Ç–æ–º–ª–µ–Ω–∏–π, –∞–ª–µ –≤—Å–µ –æ–∫",
            "–í–µ—Å–µ–ª–æ —Ç–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ",
            "–°—å–æ–≥–æ–¥–Ω—ñ —á—É–¥–æ–≤–∏–π –¥–µ–Ω—å"
        ]
    },
    food: {
        words: ["—ó–∂–∞","—Å–º–∞—á–Ω–æ","–∫—É—Ö–Ω—è","–≥–æ—Ç—É—é","–æ–±—ñ–¥","–≤–µ—á–µ—Ä—è"],
        fragments: [
            "–Ø –ª—é–±–ª—é –ø—ñ—Ü—É üçï",
            "–û–±–æ–∂–Ω—é—é —Å—É—à—ñ üç£",
            "–ú–æ—î —É–ª—é–±–ª–µ–Ω–µ ‚Äî –±–æ—Ä—â",
            "–õ—é–±–ª—é —Å–æ–ª–æ–¥–∫–µ"
        ]
    },
    smalltalk: {
        words: ["–ø–æ–≥–æ–¥–∞","–¥–µ–Ω—å","—Å–æ–Ω—Ü–µ","–∫—ñ–Ω–æ","–º—É–∑–∏–∫–∞","—Å–µ—Ä—ñ–∞–ª"],
        fragments: [
            "–Ø–∫–∏–π —Ç–≤—ñ–π —É–ª—é–±–ª–µ–Ω–∏–π —Ñ—ñ–ª—å–º?",
            "–û–±–æ–∂–Ω—é—é –º—É–∑–∏–∫—É, —Å–ª—É—Ö–∞—î—à —â–æ—Å—å –∑–∞—Ä–∞–∑?",
            "–°—å–æ–≥–æ–¥–Ω—ñ —á—É–¥–æ–≤–∞ –ø–æ–≥–æ–¥–∞, –ø—Ä–∞–≤–¥–∞?",
            "–ú–µ–Ω—ñ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è –¥–∏–≤–∏—Ç–∏—Å—è —Å–µ—Ä—ñ–∞–ª–∏",
            "–Ø–∫–∏–π —Ç–≤—ñ–π —É–ª—é–±–ª–µ–Ω–∏–π —Å–µ—Ä—ñ–∞–ª?"
        ]
    },
    questions: {
        words: ["–ø–∏—Ç–∞–Ω–Ω—è","–∑–∞–ø–∏—Ç–∞—Ç–∏","—Ä–æ–∑–∫–∞–∂–∏","—Ö–æ—á–µ—à"],
        fragments: [
            "–†–æ–∑–∫–∞–∂–∏ —Ç—Ä–æ—Ö–∏ –ø—Ä–æ —Å–µ–±–µ üôÇ",
            "–Ø–∫–µ —Ç–≤–æ—î —É–ª—é–±–ª–µ–Ω–µ —Ö–æ–±—ñ?",
            "–©–æ –ª—é–±–∏—à —ó—Å—Ç–∏?",
            "–Ø–∫–∏–π —Ç–≤—ñ–π —É–ª—é–±–ª–µ–Ω–∏–π —Ñ—ñ–ª—å–º –∞–±–æ —Å–µ—Ä—ñ–∞–ª?",
            "–Ø–∫ –ø–æ—á—É–≤–∞—î—à—Å—è —Å—å–æ–≥–æ–¥–Ω—ñ?"
        ]
    }
};

// ===============================
// –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
// ===============================

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–¥–∞—î —É—Ç–æ—á–Ω–µ–Ω–Ω—è
function isFollowUp(words){
    const followUpWords = ["—è–∫—ñ","—è–∫–∏–π","—â–æ","—è–∫ —Å–∞–º–µ"];
    return words.some(w=>followUpWords.includes(w));
}

// –í–∏–±—ñ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø–æ —Ç–µ–º—ñ
function getReplyForTopic(topic){
    let possibleReplies = dictionary[topic].fragments.filter(f=>f!==context.askedAbout[topic]);
    if(possibleReplies.length===0) possibleReplies = dictionary[topic].fragments;
    const reply = possibleReplies[Math.floor(Math.random()*possibleReplies.length)];
    context.askedAbout[topic] = reply;
    return reply;
}

// ===============================
// –õ–æ–≥—ñ–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–æ—Ç–∞
// ===============================
function botRespond(userText){
    showTyping();
    const delay = 800 + Math.random()*1200;

    setTimeout(()=>{
        hideTyping();

        const text = userText.toLowerCase();
        const words = text.split(/[\s,!.?]+/);

        let reply = "";
        let topicFound = null;

        // --- –Ø–∫—â–æ —Ü–µ —É—Ç–æ—á–Ω–µ–Ω–Ω—è –ø–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–µ–º—ñ ---
        if(context.lastTopic && isFollowUp(words)){
            topicFound = context.lastTopic;
            reply = getReplyForTopic(topicFound);
        } else {
            // --- –í–∏–±—ñ—Ä —Ç–µ–º–∏ –ø–æ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª–æ–≤–∞—Ö ---
            for(let cat in dictionary){
                if(words.some(w => dictionary[cat].words.includes(w))){
                    topicFound = cat;
                    break;
                }
            }

            if(topicFound){
                reply = getReplyForTopic(topicFound);
            } else {
                // --- –Ω–µ–≤—ñ–¥–æ–º–µ –ø–∏—Ç–∞–Ω–Ω—è -> –º–∞–ª–µ–Ω—å–∫–∏–π smalltalk ---
                const smalltalk = dictionary.smalltalk.fragments.filter(f=>f!==context.askedAbout["smalltalk"]);
                reply = smalltalk[Math.floor(Math.random()*smalltalk.length)];
                context.askedAbout["smalltalk"] = reply;
            }
        }

        context.lastTopic = topicFound;
        context.lastAnswer = reply;

        addMessage(reply,"bot-message");

        // --- –ë–æ—Ç —ñ–Ω–æ–¥—ñ —Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è ---
        if(Math.random()<0.25){
            const questions = dictionary.questions.fragments;
            const q = questions[Math.floor(Math.random()*questions.length)];
            setTimeout(()=>addMessage(q,"bot-message"), 1500 + Math.random()*1500);
        }

    }, delay);
}

// ===============================
// –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —á–∞—Ç—É
// ===============================
function addMessage(text,className){
    const messagesDiv = document.getElementById("messages");
    const msgDiv = document.createElement("div");
    msgDiv.className = "message " + className;
    msgDiv.textContent = text;
    messagesDiv.appendChild(msgDiv);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

function showTyping(){
    const messagesDiv = document.getElementById("messages");
    const typingDiv = document.createElement("div");
    typingDiv.className = "typing";
    typingDiv.id = "typingIndicator";
    typingDiv.textContent = "–°–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫ –ø–∏—à–µ...";
    messagesDiv.appendChild(typingDiv);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

function hideTyping(){
    const typingDiv = document.getElementById("typingIndicator");
    if(typingDiv) typingDiv.remove();
}